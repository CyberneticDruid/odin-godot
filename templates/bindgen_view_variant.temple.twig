package variant

{% for import_ in this.imports %}
import {{ import_.name }} "{{ import_.path }}"
{% end %}

// enums
{% for enum_ in this.enums %}{% embed "bindgen_view_enum.temple.twig" with enum_ %}
{% end %}

// compile-time constants
{% for constant in this.file_constants %}{{ constant.name }}: {{ constant.type }} : {{ constant.value }}
{% end %}

// static constants - call init proc to use these
{% for constant in this.init_constants %}{{ constant.name }}: {{ constant.type }}
{% end %}

// constructors
{% if len(this.constructors) + len(this.extern_constructors) > 0 %}
{{ this.constructor_overload_name }} :: proc {
{% for constructor in this.constructors %}
    {{ constructor.name }},
{% end %}
{% for extern_constructor in this.extern_constructors %}
    {{ extern_constructor }},
{% end %}
}
{% end %}

{% for constructor in this.constructors %}
@(private = "file")
__ptr_constructor_{{ int(constructor.index) }}: __bindgen_gde.PtrConstructor

{{ constructor.name }} :: proc "contextless" (
{% for arg in constructor.args %}
    {{ arg.name }}: {{ arg.type }},
{% end %}) -> (ret: {{ this.name }}) {
{% for arg in constructor.args %}
    {{ arg.name }} := {{ arg.name }}
{% end %}
    args := []__bindgen_gde.TypePtr {
{% for arg in constructor.args %}
        &{{ arg.name }},
{% end %}
    }
    __ptr_constructor_{{ int(constructor.index) }}(&ret, raw_data(args))
    return
}
{% end %}

{% if destructor_name, has_destructor := this.destructor.(string); has_destructor %}
@(private = "file")
__ptr_destructor: __bindgen_gde.PtrDestructor

{{ destructor_name }} :: proc "contextless" (self: {{ this.name }}) {
    self := self
    __ptr_destructor(&self)
}
{% end %}

// members
{% for member in this.members %}
@(private="file")
__ptr_setter_{{ member.name }}: __bindgen_gde.PtrSetter

{{ this.proc_prefix }}_set_{{ member.name }} :: proc "contextless" (self: ^{{ this.name }}, value: {{ member.type }}) {
    value := value
    __ptr_setter_{{ member.name }}(self, &value)
}

@(private="file")
__ptr_getter_{{ member.name }}: __bindgen_gde.PtrGetter

{{ this.proc_prefix }}_get_{{ member.name }} :: proc "contextless" (self: ^{{ this.name }}) -> (ret: {{ member.type }}) {
    __ptr_getter_{{ member.name }}(self, &ret)
    return
}
{% end %}

// static methods
{% for method in this.static_methods %}
TODO: METHOD PTR
TODO: METHOD
{% end %}

// instance methods
{% for method in this.instance_methods %}
TODO: METHOD PTR
TODO: METHOD
{% end %}

// operators
{% for operator in this.operators %}
TODO: OPERATOR PTR
TODO: OPERATORS
{% end %}

// init function
__{{ this.name }}_init :: proc "contextless" () {
    TODO: INIT
}
