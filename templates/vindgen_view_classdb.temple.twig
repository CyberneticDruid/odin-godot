package classdb

import gd "godot:gdextension"
import var "godot:variant"

get_method_ptrs_no_ret_1 :: proc "contextless" (
    $Self: typeid,
    $Arg1: typeid,
) -> (
    gd.ExtensionClassMethodPtrCall,
    gd.ExtensionClassMethodCall,
) {
    Proc :: #type proc(self: ^Self, arg1: Arg1)
    ptrcall :: proc "c" (data: rawptr, instance: gd.ExtensionClassInstancePtr, args: [^]gd.TypePtr, ret: gd.TypePtr) {
        context = gd.godot_context()

        method := cast(Proc)data
        method(cast(^Self)instance, (cast(^Arg1)args[0])^)
    }
    call :: proc "c" (
        data: rawptr,
        instance: gd.ExtensionClassInstancePtr,
        args: [^]gd.VariantPtr,
        arg_count: i64,
        ret: gd.VariantPtr,
        error: ^gd.CallError,
    ) {
        if !expect_args(args, arg_count, error, var.variant_type(Arg1)) {
            return
        }

        context = gd.godot_context()

        arg1 := var.variant_to(cast(^var.Variant)args[0], Arg1)
        method := cast(Proc)data
        method(cast(^Self)instance, arg1)
    }
    return ptrcall, call
}
