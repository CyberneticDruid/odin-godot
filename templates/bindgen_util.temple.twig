/* This file is generated by godin bindgen - DO NOT EDIT! */
package core

import "../gdextension"
import __variant_package "../variant"

{% for function in this.utility_functions %}
{{ function.proc_name }} :: proc(
{% for argument, i in function.arguments %}
{% if i > 0 %}, {% end %}{{argument.name}}: {{ argument.arg_type_str }}{% if default, has_default := argument.default_value.(string); has_default %} = {{ default }}{% end %}
{% end %})
{% if return_type, has_return_type := function.return_type_str.(string); has_return_type %} -> {{ return_type }}{% end %} {
{% for argument in function.arguments %}
    {{ argument.name }} := {{ argument.name }}
{% end %}
{% if return_type, has_return_type := function.return_type_str.(string); has_return_type %}
    return gdextension.call_utility_function_ptr_ret(__{{ function.godot_name }}__Ptr, {{ return_type }}
{% else %}
    gdextension.call_utility_function_ptr_no_ret(__{{function.godot_name}}__Ptr
{% end %}
{% for argument in function.arguments %}, cast(gdextension.TypePtr)&{{ argument.name }}{% if argument.arg_type.pod_type == nil %}._opaque{% end %}{% end %})
}

{% end %}

init_utility_functions :: proc() {
    using gdextension
    function_name: __variant_package.StringName
{% for function in this.utility_functions %}
    function_name = __variant_package.new_string_name_cstring("{{ function.godot_name }}")
    __{{ function.godot_name }}__Ptr = interface.variant_get_ptr_utility_function(cast(StringNamePtr)&function_name._opaque, {{ i64(function.hash) }})
{% end %}
}

{% for function in this.utility_functions %}
@private
__{{ function.godot_name }}__Ptr: gdextension.PtrUtilityFunction
{% end %}
